<?php

use Phalcon\Loader;
use Phalcon\Mvc\Application;
use Phalcon\Di\FactoryDefault as Settings;
use Phalcon\Mvc\View;
use Phalcon\Mvc\Url as UrlProvider;


main();

/**
 * Entry point for the web application
 */
function main() {
	//initializes the phalcon framework
	$settings = initializePhalcon();
	
	//handle the current request
	handleRequest($settings);
}

/**
 * Initializes phalcon by loading its classes and settings the modules our app will use
 * @return Settings
 * 		Returns a object representing the settings we've applied to phalcon
 */
function initializePhalcon() {
	//this initializes phalcon and loads it's classes
	$loader = new Loader();
	
	//register the path for the controllers
	$loader->registerDirs (array(
		'src/controllers/',
	));
	
	$loader->register();
	
	//next we specify which phalcon services should be initializes (DB, login, etc, this handles the common ones)	
	$settings = new Settings();
	
	//use the views options, and register the views directory
	$settings->set (
		'view',
		function() {
			$view = new View();
			$view->setViewsDir('src/views/');
			return $view;
		}
	);
	
	
	//set a url handling function
	$settings->set(
		'url',
		function() {
			$url = new UrlProvider;
			$url->setBaseUri("/");
			return $url;
		}
	);
	
	return $settings;
}


/**
 * Handles the user request by updating db and outputting html as a response
 * @param Settings $settings
 * 		The settings object generated by initializePhalcon
 */
function handleRequest($settings) {
	//create an app with the settings
	$application = new Application($settings);
	
	
	try {
		//handle the request and sends the response back
		$response = $application->handle();	
		$response->send();
	
	} catch (Exception $e) {
		//TODO: proper error page that won't give away confidential data on error
		echo "Error 404: ". $e->getMessage();
	}
}












